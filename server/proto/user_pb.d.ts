// @generated by protoc-gen-es v2.6.0
// @generated from file user.proto (package users, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file user.proto.
 */
export declare const file_user: GenFile;

/**
 * @generated from message users.Empty
 */
export declare type Empty = Message<"users.Empty"> & {
};

/**
 * Describes the message users.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export declare const EmptySchema: GenMessage<Empty>;

/**
 * @generated from message users.User
 */
export declare type User = Message<"users.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string firstName = 2;
   */
  firstName: string;

  /**
   * @generated from field: string lastName = 3;
   */
  lastName: string;

  /**
   * @generated from field: string emailId = 4;
   */
  emailId: string;

  /**
   * @generated from field: int32 age = 5;
   */
  age: number;
};

/**
 * Describes the message users.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from message users.CreateUserRequest
 */
export declare type CreateUserRequest = Message<"users.CreateUserRequest"> & {
  /**
   * @generated from field: string firstName = 1;
   */
  firstName: string;

  /**
   * @generated from field: string lastName = 2;
   */
  lastName: string;

  /**
   * @generated from field: string emailId = 3;
   */
  emailId: string;

  /**
   * @generated from field: int32 age = 4;
   */
  age: number;
};

/**
 * Describes the message users.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export declare const CreateUserRequestSchema: GenMessage<CreateUserRequest>;

/**
 * @generated from message users.UpdateUserRequest
 */
export declare type UpdateUserRequest = Message<"users.UpdateUserRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 age = 2;
   */
  age: number;
};

/**
 * Describes the message users.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export declare const UpdateUserRequestSchema: GenMessage<UpdateUserRequest>;

/**
 * @generated from message users.GetAndDeleteUserRequest
 */
export declare type GetAndDeleteUserRequest = Message<"users.GetAndDeleteUserRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message users.GetAndDeleteUserRequest.
 * Use `create(GetAndDeleteUserRequestSchema)` to create a new message.
 */
export declare const GetAndDeleteUserRequestSchema: GenMessage<GetAndDeleteUserRequest>;

/**
 * @generated from message users.DeleteUserResponse
 */
export declare type DeleteUserResponse = Message<"users.DeleteUserResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message users.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export declare const DeleteUserResponseSchema: GenMessage<DeleteUserResponse>;

/**
 * @generated from message users.ListUser
 */
export declare type ListUser = Message<"users.ListUser"> & {
};

/**
 * Describes the message users.ListUser.
 * Use `create(ListUserSchema)` to create a new message.
 */
export declare const ListUserSchema: GenMessage<ListUser>;

/**
 * @generated from message users.ListUsersResponse
 */
export declare type ListUsersResponse = Message<"users.ListUsersResponse"> & {
  /**
   * @generated from field: repeated users.User users = 1;
   */
  users: User[];
};

/**
 * Describes the message users.ListUsersResponse.
 * Use `create(ListUsersResponseSchema)` to create a new message.
 */
export declare const ListUsersResponseSchema: GenMessage<ListUsersResponse>;

/**
 * @generated from service users.UserService
 */
export declare const UserService: GenService<{
  /**
   * @generated from rpc users.UserService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * @generated from rpc users.UserService.GetUserById
   */
  getUserById: {
    methodKind: "unary";
    input: typeof GetAndDeleteUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * @generated from rpc users.UserService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * @generated from rpc users.UserService.GetUserList
   */
  getUserList: {
    methodKind: "unary";
    input: typeof ListUserSchema;
    output: typeof ListUsersResponseSchema;
  },
  /**
   * @generated from rpc users.UserService.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof GetAndDeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
}>;

